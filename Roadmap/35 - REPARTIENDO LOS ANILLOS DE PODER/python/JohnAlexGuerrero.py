# -*- coding: utf-8 -*-
"""#35-repartiendo-anillos-de-poder.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EwPbfqxJ_S_A7BUW43-BVJJ0fJWFzddt
"""

'''
/*
 * EJERCICIO:
 * ¡La temporada 2 de "Los Anillos de Poder" está a punto de estrenarse!
 * ¿Qué pasaría si tuvieras que encargarte de repartir los anillos
 * entre las razas de la Tierra Media?
 * Desarrolla un programa que se encargue de distribuirlos.
 * Requisitos:
 * 1. Los Elfos recibirán un número impar.
 * 2. Los Enanos un número primo.
 * 3. Los Hombres un número par.
 * 4. Sauron siempre uno.
 * Acciones:
 * 1. Crea un programa que reciba el número total de anillos
 *    y busque una posible combinación para repartirlos.
 * 2. Muestra el reparto final o el error al realizarlo.
 */
 '''

header_str = '''
    Los Anillos de Poder
  =======================
 '''

import pandas as pd

def repartir_anillos(num):
  anillos_restantes = num_anillos - 1
  total_anillos_enanos = []
  total_anillos_hombres = []
  total_anillos_elfos = []
  total_anillos_sauron = []

  for x in numeros_primos(anillos_restantes):
    for y in numeros_pares(anillos_restantes):
      for z in numeros_impares(anillos_restantes):
        if x + y + z + 1 == num:
          total_anillos_enanos.append(x)
          total_anillos_hombres.append(y)
          total_anillos_elfos.append(z)
          total_anillos_sauron.append(1)
          break
        continue
      break
    continue


  data = {
      "Elfos": total_anillos_elfos,
      "Enanos":total_anillos_enanos,
      "Hombres":total_anillos_hombres,
      "Sauron": total_anillos_sauron
  }

  if len(total_anillos_elfos) != 0:
    df = pd.DataFrame(data=data, index=[x for x in range(1, len(total_anillos_hombres) + 1)])
    return df
  return 'No hay anillos suficientes'


#numeros primos menores de num_anillos
def numeros_primos(num):
  primos = []
  for i in range(2, num):
    es_primo = True
    for j in range(2, int(i ** 0.5) + 1):
      if i % j == 0:
        es_primo = False
        break
    if es_primo:
      primos.append(i)
  return primos

#numeros pares menores de num_anillos
def numeros_pares(num):
  pares = [i for i in range(1, num) if i % 2 == 0]
  return pares

#numeros impares menores de num_anillos
def numeros_impares(num):
  impares = [i for i in range(1, num + 1) if i % 2 != 0]
  return impares

print(header_str)
num_anillos = int(input('¿Cuantos anillos tienes para repartir? '))
print(f'Tienes {num_anillos} de poder')

repartir_anillos(num_anillos)

