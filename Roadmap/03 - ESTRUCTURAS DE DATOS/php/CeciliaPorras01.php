<?php /*
 * EJERCICIO:
 * - Muestra ejemplos de creaci√≥n de todas las estructuras soportadas por defecto en tu lenguaje.
 * - Utiliza operaciones de inserci√≥n, borrado, actualizaci√≥n y ordenaci√≥n.
 *
 * DIFICULTAD EXTRA (opcional):
 * Crea una agenda de contactos por terminal.
 * - Debes implementar funcionalidades de b√∫squeda, inserci√≥n, actualizaci√≥n y eliminaci√≥n de contactos.
 * - Cada contacto debe tener un nombre y un n√∫mero de tel√©fono.
 * - El programa solicita en primer lugar cu√°l es la operaci√≥n que se quiere realizar, y a continuaci√≥n
 *   los datos necesarios para llevarla a cabo.
 * - El programa no puede dejar introducir n√∫meros de tel√©fono no num√©ricos y con m√°s de 11 d√≠gitos.
 *   (o el n√∫mero de d√≠gitos que quieras)
 * - Tambi√©n se debe proponer una operaci√≥n de finalizaci√≥n del programa.
 */


 //Listas 

 $my_lists = array("Cecilia", "Porras", "Gonzalez", "Porras", "Torres");
 print_r($my_lists);

 array_push($my_lists, "Martha");//Inserci√≥n
print_r($my_lists);

unset($my_lists[2]); // Eliminaci√≥n
print_r($my_lists);

$my_lists[1] = "Porrasssss"; // Actualizaci√≥n
print_r($my_lists);

print_r($my_lists[5]);//Acceso

sort($my_lists); //Ordenaci√≥n
print_r($my_lists);


//Tuplas
$my_tuples = array("Cecilia", "Porras", "@porrasceci", "23");
print_r($my_tuples[3]);//Acceso

sort($my_tuples);//Ordenaci√≥n
print_r($my_tuples);



//Diccionarios
$my_dict = array("Nombre" => "Cecilia", "Apellido" => "Porras", "Edad" => "23", "Twitter" => "@porrasceci");
print_r($my_dict["Edad"]);//Acceso

$my_dict["Edad"] = "24";//Actualizaci√≥n
print_r($my_dict["Edad"]);

unset($my_dict["Twitter"]);//Eliminaci√≥n
print_r($my_dict);

$my_dict["Telefono"] = "1234567890";//Inserci√≥n
print_r($my_dict);




//Extra 

$agenda =[];

    function contacts(){

        global $agenda;

        while (true) {
         
        print "Bienvenido a la agenda de contactos üìï\n  ";
        print "Selecciona una opci√≥n:\n";
        print "1.- Buscar contacto üîé\n";
        print "2.- Insertar contacto ‚ûï\n";
        print "3.- Actualizar contacto üë≤üèΩ\n";
        print "4.- Eliminar contacto üóëÔ∏è\n";
        print "5.- Salir\n";

        $option = readline("Opci√≥n: "); 

            switch($option){
                case 1:     
                    print  "Has elegido: Buscar contacto üîé\n";
                        searchContact($agenda);
                    break;
                case 2:
                    print  "Has elegido: Insertar contacto ‚ûï\n";
                        addContact($agenda);
                    break;
                case 3:
                    print  "Has elegido: Actualizar contacto üë≤üèΩ\n";
                        updContact($agenda);
                    break;
                case 4:
                    print  "Has elegido: Eliminar contacto üóëÔ∏è\n";
                    break;
                case 5:
                    print  "Saliendo... üëã\n";
                    exit;
                default:
                    print  "‚ùå Opci√≥n no v√°lida. Int√©ntalo de nuevo.\n";
                    break;
            }
        }
    }

    function getContactInfo() {
        print "Introduce el nombre del contacto: ";
        $name = readline();
        print "Introduce el n√∫mero de tel√©fono: ";
        $phone = readline();

        if ($name == "" || !preg_match("/^[a-zA-Z\s]+$/", $name)) {
            print "‚ùå Debes introducir un nombre v√°lido (solo letras y espacios).\n";
            return null;
        } elseif ($phone == "" || !is_numeric($phone) || strlen($phone) != 10) {
            print "‚ùå Debes introducir un n√∫mero de tel√©fono v√°lido (10 d√≠gitos).\n";
            return null;
        } else {
            return ['name' => $name, 'phone' => $phone];
        }
    }


    function searchContact($agenda) {
        $contact = getContactInfo();
        if ($contact) {
            foreach($agenda as $entry) {
                if ($entry['name'] == $contact['name'] && $contact['phone'] == $contact['phone']) {
                    print  "Contacto encontrado: \n";
                    print  "Nombre: " . $contact['name'] . "\n";
                    print  "Tel√©fono: " . $contact['phone'] . "\n";
                }

            }
      
            print  " ‚ùå Contacto no encontrado\n";
        }
    }

    function addContact($agenda) {
        $contact = getContactInfo();
        $agenda[] = $contact;
        if ($contact) {
            print  "Contacto a√±adido: \n";
            print  "Nombre: " . $contact['name'] . "\n";
            print  "Tel√©fono: " . $contact['phone'] . "\n";
        }
    }


    function updContact($agenda) {
        $contact = getContactInfo();
        if ($contact) {
            print  "Contacto actualizado: \n";
            print  "Nombre: " . $contact['name'] . "\n";
            print  "Tel√©fono: " . $contact['phone'] . "\n";
        }
        print  " ‚ùå Contacto no actualizado\n";
    }

    function deleteContact($agenda) {
        $contact = getContactInfo();
        if ($contact) {
            foreach ($agenda as $key => $entry) {
                if ($entry['name'] == $contact['name']) {
                    unset($agenda[$key]);
                    print  "Contacto eliminado: \n";
                    print  "Nombre: " . $contact['name'] . "\n";
                    print  "Tel√©fono: " . $contact['phone'] . "\n";
                }
            }
            print " ‚ùå Contacto no eliminado\n";
        }
    }


// Llamamos a la funci√≥n
contacts();

