/*
_____________________________________
https://github.com/EliTeDev-44
2025 - JavaScript
_______________________________________
02 FUNCIONES Y ALCANCE
---------------------------------------
* - Crea ejemplos de funciones b√°sicas que representen las diferentes
 *   posibilidades del lenguaje:
 *   Sin par√°metros ni retorno, con uno o varios par√°metros, con retorno...
 * - Comprueba si puedes crear funciones dentro de funciones.
 * - Utiliza alg√∫n ejemplo de funciones ya creadas en el lenguaje.
 * - Pon a prueba el concepto de variable LOCAL y GLOBAL.
 * - Debes hacer print por consola del resultado de todos los ejemplos.
 *   (y tener en cuenta que cada lenguaje puede poseer m√°s o menos posibilidades)
 * 
 *  *
 * DIFICULTAD EXTRA (opcional):
 * Crea una funci√≥n que reciba dos par√°metros de tipo cadena de texto y retorne un n√∫mero.
 * - La funci√≥n imprime todos los n√∫meros del 1 al 100. Teniendo en cuenta que:
 *   - Si el n√∫mero es m√∫ltiplo de 3, muestra la cadena de texto del primer par√°metro.
 *   - Si el n√∫mero es m√∫ltiplo de 5, muestra la cadena de texto del segundo par√°metro.
 *   - Si el n√∫mero es m√∫ltiplo de 3 y de 5, muestra las dos cadenas de texto concatenadas.
 *   - La funci√≥n retorna el n√∫mero de veces que se ha impreso el n√∫mero en lugar de los textos.
 *
 * Presta especial atenci√≥n a la sintaxis que debes utilizar en cada uno de los casos.
 * Cada lenguaje sigue una convenciones que debes de respetar para que el c√≥digo se entienda.
*/

// ________________________
// Funciones
// https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Functions

// Sintaxis de una funci√≥n
function nombre (parametro, parametro2) {
    // C√≥digo a ejecutar
}


// Funci√≥n B√°sica (Sin par√°metros)
function miFuncionBasica() {
    console.log("‚úÖ Funci√≥n B√°sica sin par√°metros")
}
miFuncionBasica(); // Llamar a la funci√≥n


// Funci√≥n con 1 par√°metro
function func1Parametro(texto) {
    console.log(texto)
}
func1Parametro("‚úÖ Soy un par√°metro")


// ________________________
// Funci√≥n con retorno
// https://developer.mozilla.org/es/docs/Learn/JavaScript/Building_blocks/Return_values

function metrosCuadrados (ancho, largo) {
    return ancho * largo
}
console.log("‚úÖ La superficie tiene", metrosCuadrados(4, 10), "m2"); // Llamada a la funci√≥n pasando los 2 par√°metros


// Retorno de m√∫ltiples datos
function calcularDatos(ancho, largo) {
    return {
      area: ancho * largo,
      perimetro: 2 * (ancho + largo)
    }
}

const rectangulo = calcularDatos(4, 12)
console.log(`‚úÖ √Årea del rect√°ngulo: ${rectangulo.area}`)   // √Årea: 48
console.log(`üîÅ Per√≠metro del rect√°ngulo: ${rectangulo.perimetro}`) // Per√≠metro: 32


// ________________________
// Variable Global
let variableGlobal = "Soy una Variable Global"

// Variable Local
function mostrarVariables () {
    let variableLocal = "Soy una variable Local"
    console.log(variableGlobal, "\n", variableLocal)
}
mostrarVariables()


// Funci√≥n dentro de una Funci√≥n:
function funcionExterna() {
    function funcionInterna(a, b) {
        return a - b
    }
    return funcionInterna(10, 4)
}
console.log("üß† Devuelvo una funci√≥n anidada:", funcionExterna())

const numeroMayor = Math.max(4, 44, 16, 22)
console.log("üß† El n√∫mero mayor es el", numeroMayor, "\n") // 44


/*  * DIFICULTAD EXTRA (opcional):
 * Crea una funci√≥n que reciba dos par√°metros de tipo cadena de texto y retorne un n√∫mero.
 * - La funci√≥n imprime todos los n√∫meros del 1 al 100. Teniendo en cuenta que:
 *   - Si el n√∫mero es m√∫ltiplo de 3, muestra la cadena de texto del primer par√°metro.
 *   - Si el n√∫mero es m√∫ltiplo de 5, muestra la cadena de texto del segundo par√°metro.
 *   - Si el n√∫mero es m√∫ltiplo de 3 y de 5, muestra las dos cadenas de texto concatenadas.
 *   - La funci√≥n retorna el n√∫mero de veces que se ha impreso el n√∫mero en lugar de los textos.
 *
 * Presta especial atenci√≥n a la sintaxis que debes utilizar en cada uno de los casos.
 * Cada lenguaje sigue una convenciones que debes de respetar para que el c√≥digo se entienda.  
 */
console.log("==========================")
console.log("üß† Ejercicio Extra:\n")

function multiplos(multiplo3, multiplo5) {
    let contador = 0

    for (let num = 1; num <= 100; num++) {
        if (num % 3 === 0 && num % 5 === 0) {
            console.log(num, multiplo3 + ", y " + multiplo5)
        } else if (num % 3 === 0) {
            console.log(num, multiplo3)
        } else if (num % 5 === 0) {
            console.log(num, multiplo5)
        } else {
            contador += 1
            console.log(num)
        }
    }
    return contador
}

multiplos("Soy m√∫ltiplo de 3", "Soy m√∫ltiplo de 5")

console.log("\nFin del ejercicio Extra")
console.log("==========================")